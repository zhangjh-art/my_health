spring:
  application:
    name: zuul-gateway-backend
  redis:
    host: 127.0.0.1
    port: 6379
    database: 0
    timeout: 2000ms
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848

server:
  port: 9000
  tomcat:
    #最大连接等待数,默认100
    accept-count: 1000
    #最小工作线程数,默认10
    min-spare-threads: 100
    #最大工作线程数,默认200
    max-threads: 1000
    #请求体最大大小,默认2MB
    max-swallow-size: -1
  servlet:
    encoding:
      charset: UTF-8

zuul:
  semaphore:
    # 信号量  在该模式下，接收请求和执行下游依赖在同一个线程内完成，不存在线程上下文切换所带来的性能开销  即是一个完整的请求均由一个线程完成  这个数量限制创建的线程数
    max-semaphores: 10000
  # 以下的header会被忽略掉
  ignored-headers: Access-Control-Allow-Credentials,Access-Control-Allow-Origin,Access-Control-Allow-Methods
  # 要传递host到后台
  add-host-header: true
  # 关闭zuul的debug功能
  include:
    debug:
      header: false
  debug:
    request: false
    parameter: debugRequest
  # 路由
  routes:
    api-auth:
      path: /api-auth/**
      service-id: oauth-server
      strip-prefix: true
      sensitive-headers: '*'
      custom-sensitive-headers: true
    auth-login-page:
      path: /login.html
      service-id: oauth-server
      strip-prefix: true
      sensitive-headers: '*'
      custom-sensitive-headers: true
    auth-login-process:
      path: /user/login
      service-id: oauth-server
      strip-prefix: true
      sensitive-headers: '*'
      custom-sensitive-headers: true
    auth-login-token:
      path: /oauth/token
      service-id: oauth-server
      strip-prefix: true
      sensitive-headers: '*'
      custom-sensitive-headers: true
    auth-check-process:
      path: /oauth/check_token
      service-id: oauth-server
      strip-prefix: true
      sensitive-headers: '*'
      custom-sensitive-headers: true
    api-user:
      path: /api-user/**
      service-id: user-service
      strip-prefix: true
      sensitive-headers: '*'
      custom-sensitive-headers: true
    api-evaluation:
      path: /api-evaluation/**
      service-id: evaluation-service
      strip-prefix: true
      sensitive-headers: '*'
      custom-sensitive-headers: true
  # 开启ribbon饥饿加载
  ribbon:
    eager-load:
      enabled: true
  gateway:
    # 网关动态路由  结合nacos 新增服务后不用重启服务  自动注册  my_health\gateway\src\main\java\com\cnasoft\health\gateway\route\nacos
    dynamic-route:
      enabled: true

#负载均衡
ribbon:
  #请求处理的超时时间
  ReadTimeout: 300000
  #请求连接的超时时间
  ConnectTimeout: 60000
  #每个host最大连接数
  MaxConnectionsPerHost: 5000
  #最大连接数
  MaxTotalConnections: 10000

##feign参数优化
feign:
  client:
    config:
      default:
        connectTimeout: 300000
        readTimeout: 300000
        loggerLevel: full
  compression:
    request:
      enabled: false
      mine-types: text/xml,application/xml,application/json
      min-request-size: 204800000
    response:
      enabled: true
  httpclient:
    enabled: true
  hystrix:
    enabled: false

#熔断降级配置
hystrix:
  threadpool:
    default:
      #线程池大小
      coreSize: 100
      #请求队列大小
      maxQueueSize: 10000
      #队列拒绝阈值
      queueSizeRejectionThreshold: 2000
  command:
    default:
      circuitBreaker:
        #设置使熔断判断逻辑开始工作的最小请求数
        requestVolumeThreshold: 1000
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 720000

# spring actuator配置
management:
  server:
    port: 9010
  endpoints:
    web:
      base-path: /management
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      enabled: true
      show-details: always
      status:
        http-mapping:
          DOWN: 503
        order: DOWN, OUT-OF-SERVICE, UP, UNKNOWN
    shutdown:
      enabled: true
    hystrix:
      stream:
        enabled: false

swagger:
  enable: true
  title: 网关
  description: 提供路由、流控等功能
  version: 1.0.0
  base-package: com.cnasoft.health.gateway.controller
  group-name: 网关

#接口防刷超时时间
request:
  duplicate:
    timeout: 500