<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnasoft.health.userservice.mapper.TestManagerPasswordMapper">

    <select id="findListByPage" resultType="com.cnasoft.health.common.dto.TestManagerPasswordDTO">
        select t.id,t.school_id,s.name as school_name,AES_DECRYPT(UNHEX(t.password), #{params.key}) as password,
               t.application_scene,s.area_code,t.update_time
        from test_manager_password t
        inner join school s on s.id = t.school_id
        <where>
            t.user_id = #{params.userId} and t.is_deleted = 0
            <if test="params.taskId != null and params.taskId != ''">
                and t.id = #{params.taskId}
            </if>
            <if test="params.schoolId != null">
                and t.school_id = #{params.schoolId}
            </if>
            <if test="params.applicationScene != null and params.applicationScene > 0">
                and t.application_scene = #{params.applicationScene}
            </if>
        </where>
    </select>

    <select id="findExist" resultType="java.lang.Long">
        select id from test_manager_password
        where is_deleted = 0 and user_id = #{userId} AND school_id = #{schoolId}
        and application_scene = #{applicationScene} limit 1
    </select>

    <select id="findPassword" resultType="java.lang.String">
        select AES_DECRYPT(UNHEX(password), #{key}) as password
        from test_manager_password
        where is_deleted = 0 and user_id = #{userId} AND school_id = #{schoolId}
        and application_scene = #{applicationScene} limit 1
    </select>

    <insert id="insert" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO `test_manager_password` (user_id, school_id, password, application_scene,
                                create_by, create_time, update_by, update_time, is_deleted)
        VALUES (#{userId},#{schoolId},HEX(AES_ENCRYPT(#{password}, #{key})),#{applicationScene},
                #{createBy},#{createTime},#{updateBy},#{updateTime},#{isDeleted})
    </insert>

    <update id="update">
        update test_manager_password
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId},
            </if>
            <if test="password != null and password != ''">
                password = HEX(AES_ENCRYPT(#{password}, #{key})),
            </if>
            <if test="applicationScene != null">
                application_scene = #{applicationScene},
            </if>
            <if test="updateBy != null">
                update_by =  #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time =  #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>
</mapper>
