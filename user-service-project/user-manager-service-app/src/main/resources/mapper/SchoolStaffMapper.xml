<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cnasoft.health.userservice.mapper.SchoolStaffMapper">

    <sql id="Base_Column_List">
        t.id,t.user_id,AES_DECRYPT(UNHEX(u.username), #{key}) username,t.job_number,t.department, t.type,t.post,
        AES_DECRYPT(UNHEX(u.name), #{key}) name,u.sex,AES_DECRYPT(UNHEX(u.mobile), #{key}) as mobile,u.email,u.enabled
    </sql>

    <select id="getTaskUsers" parameterType="com.cnasoft.health.userservice.feign.dto.TaskUserReqVO"
            resultType="com.cnasoft.health.userservice.feign.dto.TaskUserResVO">
        SELECT ss.user_id as user_id, ss.job_number as job_number, ss.department as department, ss.post as post
        FROM
        school_staff ss inner join sys_user u on u.id = ss.user_id
        <where>
            ss.is_deleted = 0 and u.is_deleted = 0
            <if test="query.schoolId != null and query.schoolId > -1">
                and ss.school_id = #{query.schoolId}
            </if>
            <if test="query.departments != null and query.departments.size() > 0">
                and ss.department in
                <foreach collection="query.departments" close=")" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="query.mixInput != null and query.mixInput != ''">
                and ( LOCATE(#{query.mixInput},ss.user_id) > 0 or
                LOCATE(#{query.mixInput}, AES_DECRYPT(UNHEX(u.name), #{key})) > 0 or
                LOCATE(#{query.mixInput},ss.job_number) > 0 or
                LOCATE(#{query.mixInput},AES_DECRYPT(UNHEX(u.mobile),#{key})) > 0)
            </if>
        </where>
        UNION ALL
        SELECT st.user_id as user_id, st.job_number as job_number, st.department as department, '心理教师' as post
        FROM
        school_teacher st inner join sys_user u on u.id = st.user_id
        <where>
            st.is_deleted = 0
            <if test="query.schoolId != null and query.schoolId > -1">
                and st.school_id = #{query.schoolId}
            </if>
            <if test="query.departments != null and query.departments.size() > 0">
                and st.department in
                <foreach collection="query.departments" close=")" item="item" open="(" separator=",">
                    #{item}
                </foreach>
            </if>
            <if test="query.mixInput != null and query.mixInput != ''">
                and ( LOCATE(#{query.mixInput},st.user_id) > 0 or
                LOCATE(#{query.mixInput}, AES_DECRYPT(UNHEX(u.name),#{key})) > 0 or
                LOCATE(#{query.mixInput},st.job_number) > 0 or
                LOCATE(#{query.mixInput},AES_DECRYPT(UNHEX(u.mobile),#{key})) > 0)
            </if>
        </where>
        order by user_id desc
    </select>

    <select id="selectBySchoolStaff" resultType="com.cnasoft.health.userservice.model.SchoolStaff">
        select s.id,s.user_id,AES_DECRYPT(UNHEX(u.username), #{key}) username
        from school_staff s
        inner join sys_user u on s.user_id = u.id
        <where>
            s.is_deleted = 0 and u.is_deleted = 0
            and s.school_id = #{schoolId} and u.role_code = #{roleCode}
            <if test="usernames != null and usernames.size() > 0">
                and AES_DECRYPT(UNHEX(u.username), #{key}) in
                <foreach collection="usernames" close=")" item="username" open="(" separator=",">
                    #{username}
                </foreach>
            </if>
        </where>
    </select>

    <select id="findList" resultType="com.cnasoft.health.userservice.model.SchoolStaff">
        select
        <include refid="Base_Column_List"/>
        from school_staff t
        left join sys_user u on t.user_id = u.id
        <where>
            t.is_deleted = 0 and u.is_deleted = 0
            <if test="p.number != null">
                and (t.id = #{p.number}
                or AES_DECRYPT(UNHEX(u.mobile), #{key}) like concat(#{p.number}, '%')
                or t.job_number like concat(#{p.number}, '%'))
            </if>
            <if test="p.text != null and p.text != ''">
                and LOCATE(#{p.text}, AES_DECRYPT(UNHEX(u.name), #{key})) > 0
            </if>
            <if test="p.enabled != null">
                and u.enabled = #{p.enabled}
            </if>
            <if test="p.schoolId != null">
                and t.school_id = #{p.schoolId}
            </if>
            order by t.id desc
        </where>
    </select>

    <select id="findByUserId" resultType="com.cnasoft.health.userservice.model.SchoolStaff">
        select t.id,
               t.user_id,
               AES_DECRYPT(UNHEX(u.username), #{key})  username,
               u.nickname,
               t.job_number,
               t.department,
               t.type,
               t.post,
               AES_DECRYPT(UNHEX(u.name), #{key})      name,
               u.sex,
               AES_DECRYPT(UNHEX(u.mobile), #{key}) as mobile,
               u.email,
               u.enabled,
               u.head_img_url
        from school_staff t
                 inner join sys_user u on t.user_id = u.id
        where t.is_deleted = 0
          and u.is_deleted = 0
          and t.user_id = #{userId}
    </select>

    <select id="findByIdAndSchoolId" resultType="com.cnasoft.health.userservice.model.SchoolStaff">
        select
        <include refid="Base_Column_List"/>
        from school_staff t
        inner join sys_user u on t.user_id = u.id
        where t.is_deleted = 0 and u.is_deleted = 0 and t.id = #{id} and t.school_id = #{schoolId}
    </select>

    <select id="headerTeacherList" resultType="com.cnasoft.health.common.dto.CommonDTO">
        select t.id, AES_DECRYPT(UNHEX(u.name), #{key}) name
        from school_staff t
                 inner join sys_user u on t.user_id = u.id
        where t.is_deleted = 0
          and u.is_deleted = 0
          and t.school_id = #{schoolId}
          and t.`type` = #{type}
    </select>
    <select id="schoolTaskInScope" resultType="java.lang.Integer">
        SELECT 1
        from student_base_info b
        WHERE user_id = #{userId}
          AND school_id = #{schoolId}
        UNION ALL
        SELECT 1
        from parent p
        where user_id = #{userId}
        union all
        select 1
        from school_staff ss
        where user_id = #{userId}
          and school_id = #{schoolId}
        union all
        select 1
        from school_teacher st
        where user_id = #{userId}
          and school_id = #{schoolId} limit 1
    </select>

    <select id="getSchoolStaffIdsByMobiles" resultType="com.cnasoft.health.userservice.model.SchoolStaff">
        select t.id,AES_DECRYPT(UNHEX(u.mobile), #{key}) as mobile from school_staff t
        left join sys_user u on u.id = t.user_id
        <where>
            t.is_deleted = 0 and u.is_deleted = 0 and t.type = 2 and t.school_id = #{schoolId}
            <if test="mobiles != null and mobiles.size() > 0">
                and AES_DECRYPT(UNHEX(u.mobile), #{key}) in
                <foreach collection="mobiles" close=")" item="mobile" open="(" separator=",">
                    #{mobile}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getSelectList" resultType="java.util.Map">
        select s.user_id id,convert (AES_DECRYPT(UNHEX(u.name), #{key}) using utf8) name
        from school_staff s
        inner join sys_user u on s.user_id = u.id
        <where>
            s.is_deleted = 0 and s.school_id = #{schoolId}
            <if test="userName != null and userName != ''">
                and AES_DECRYPT(UNHEX(u.name), #{key}) like concat('%',#{userName},'%')
            </if>
            <if test="department != null and department != ''">
                and s.department = #{department}
            </if>
        </where>
    </select>
    <select id="listMentalFile" resultType="com.cnasoft.health.userservice.feign.dto.StaffMentalFileVO">
        select t.id,t.user_id,t.job_number,t.department,t.post,
        AES_DECRYPT(UNHEX(u.name), #{key}) name,u.sex,
        AES_DECRYPT(UNHEX(u.mobile), #{key}) as mobile,
        u.head_img_url
        from school_staff t
        inner join sys_user u on t.user_id = u.id
        where t.is_deleted = 0
        <if test="param.schoolId != null">
            and t.school_id = #{param.schoolId}
        </if>
        <if test="param.query != null and param.query != ''">
            and AES_DECRYPT(UNHEX(u.name), #{key}) like concat('%',#{param.query}, '%')
        </if>
        <if test="param.department != null and param.department != ''">
            and t.department = #{param.department}
        </if>
        UNION ALL
        select t.id,t.user_id,t.job_number,t.department,t.post,
        AES_DECRYPT(UNHEX(u.name), #{key}) name,u.sex,
        AES_DECRYPT(UNHEX(u.mobile), #{key}) as mobile,
        u.head_img_url
        from school_teacher t
        inner join sys_user u on t.user_id = u.id
        where t.is_deleted = 0
        <if test="param.schoolId != null">
            and t.school_id = #{param.schoolId}
        </if>
        <if test="param.query != null and param.query != ''">
            and AES_DECRYPT(UNHEX(u.name), #{key}) like concat('%',#{param.query}, '%')
        </if>
        <if test="param.department != null and param.department != ''">
            and t.department = #{param.department}
        </if>
    </select>

    <select id="getSchoolStaffUserIdBySchoolAndDepartmentCode"
            resultType="com.cnasoft.health.common.vo.UserClazzVO">
        select user_id from school_staff
        where is_deleted = 0
        <if test="schoolId != null and schoolId > 0">
            and school_id = #{schoolId}
        </if>
        <if test="departmentCodes != null and departmentCodes.size() > 0">
            and LOCATE(department,
            <foreach collection="departmentCodes" item="code" index="index" open="'" close="'" separator=",">
                ${code}
            </foreach>) > 0
        </if>
        union all
        select user_id from school_teacher
        where is_deleted = 0
        <if test="schoolId != null and schoolId > 0">
            and school_id = #{schoolId}
        </if>
        <if test="departmentCodes != null and departmentCodes.size() > 0">
            and LOCATE(department,
            <foreach collection="departmentCodes" item="code" index="index" open="'" close="'" separator=",">
                ${code}
            </foreach>) > 0
        </if>
    </select>

    <select id="findSchoolStaffInfo" resultType="com.cnasoft.health.common.dto.SchoolStaffDTO">
        select ss.user_id    as userId,
               ss.school_id  as schoolId,
               ss.job_number as jobNumber,
               ss.department as department,
               sdd.dict_name as departmentName,
               ss.post       as post,
               ss.type       as type
        from school_staff ss
                 inner join sys_dict_data sdd on sdd.dict_value = ss.department
        where ss.is_deleted = 0
          and ss.user_id = #{userId}
    </select>

    <resultMap id="schoolStaffList" type="com.cnasoft.health.common.dto.SchoolTeacherStaffDTO">
        <id column="userId" property="userId"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="sex" property="sex"/>
        <result column="areaCode" property="areaCode"/>
        <result column="role_code" property="presetRoleCode"/>
        <result column="schoolId" property="schoolId"/>
        <result column="jobNumber" property="jobNumber"/>
        <result column="department" property="department"/>
        <result column="departmentName" property="departmentName"/>
        <result column="type" property="type"/>
        <result column="post" property="post"/>
        <result column="isAcceptTask" property="isAcceptTask"/>
    </resultMap>
    <select id="findSchoolTeacherStaffList" resultMap="schoolStaffList">
        select
        su.id as userId,
        AES_DECRYPT(UNHEX(su.name), #{key}) as name,
        AES_DECRYPT(UNHEX(su.mobile), #{key}) as mobile,
        su.sex as sex,
        su.area_code as areaCode,
        su.role_code,
        ss.school_id as schoolId,
        ss.job_number as jobNumber,
        ss.department as department,
        sdd.dict_name as departmentName,
        ss.type as type,
        ss.post,
        null as isAcceptTask
        from sys_user su
        inner join school_staff ss on su.id = ss.user_id
        inner join sys_dict_data sdd on sdd.dict_value = ss.department
        where su.is_deleted = 0
        and ss.user_id in
        <foreach collection="userIds" separator="," close=")" open="(" index="index" item="userId">
            #{userId}
        </foreach>
        union all
        select
        su.id as userId,
        AES_DECRYPT(UNHEX(su.name), #{key}) as name,
        AES_DECRYPT(UNHEX(su.mobile), #{key}) as mobile,
        su.sex as sex,
        su.area_code as areaCode,
        su.role_code,
        ss.school_id as schoolId,
        ss.job_number as jobNumber,
        ss.department as department,
        sdd.dict_name as departmentName,
        null as type,
        '心理教师' as post,
        ss.is_accept_task as isAcceptTask
        from sys_user su
        inner join school_teacher ss on su.id = ss.user_id
        inner join sys_dict_data sdd on sdd.dict_value = ss.department
        where su.is_deleted = 0
        and ss.user_id in
        <foreach collection="userIds" separator="," close=")" open="(" index="index" item="userId">
            #{userId}
        </foreach>
    </select>
</mapper>
